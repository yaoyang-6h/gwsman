/* 
 * File:   chanscan.h
 * Author: wyy
 *
 * Created on 2014年5月6日, 下午3:32
 */

#ifndef CHANSCAN_H
#define	CHANSCAN_H

#ifdef	__cplusplus
extern "C" {
#endif

#define CHANSCAN_TIME_LIMIT     120             // chanscan time limit: within 120 seconds after power up
#define SETCHAN_SETTLE_TIME     600000          // settle time after each setchan command, 
                                                // no NF measurement in this time range.
#define NF_BUF_SIZE             100             // size of NF buffer for a single CH,                                                 // > NF_PER_SECOND*(SCAN_PERIOD - SETCHAN_SETTLE_TIME)/1000000
#define NF_MIN_NUM              5               // minimum number of NF measurements required
#define NF_MAX_TIME             3000000         // maximum scan time (ms) for a single CH in a single round                                                 // > NF_PER_SECOND*(SCAN_PERIOD - SETCHAN_SETTLE_TIME)/1000000
//#define NF_MIN_TIME             3000000         // minimum scan period for each CH (ms)
#define NF_MIN_TIME             1000000         // minimum scan period for each CH (ms)
#define NF_MIN_TIME_MIN         1000000          // can be as short as 100000
#define INTERNAL_CODE           12345678        // to enable use of NF_MIN_TIME_MIN

//#define NF_VALID_THRLD          5               // threshold (dB) for NF validation check        

//#define BASE_CH                 36              // base channel for NF jumping removal
#define MAX_RETRY_N             3               // maximum number of retried scans for each channel

#define DEFAULT_MAX             -1000           // default MAX value
#define DEFAULT_MIN             1000            // default MIN value
#define DEFAULT_AVG             -1000           // default average value
#define MAX_CHANNEL_N           100             // maximum number of channels in TVWS
#define DEFAULT_FAILED_NF       99              // default NF value for failed measurement
#define DEFAULT_NO_CHANNEL_IDX  -1              // default channel number which does not exit

void PrintHelp();
int chanscan_main(int argc, char** argv);

#ifdef	__cplusplus
}
#endif

#endif	/* CHANSCAN_H */

